eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIG15LWJ1aWxkOgogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IG5vZGUtaGVsbG8td29ybGQgLgogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgZXZlbnQ6IHB1c2gKCiAgaW1hZ2VfdG9fcXVheToKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtkcm9uZV9kZW1vIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgbm9kZS1oZWxsby13b3JsZCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvbm9kZS1oZWxsby13b3JsZDoke0RST05FX0NPTU1JVF9TSEF9CiAgICAgIC0gZG9ja2VyIHB1c2ggcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL25vZGUtaGVsbG8td29ybGQ6JHtEUk9ORV9DT01NSVRfU0hBfQogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgZXZlbnQ6IHB1c2gKCiAgaW1hZ2VfdG9fYXJ0aWZhY3Rvcnk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InJlZ3QtYnVpbGQtYm90IiAtcD0ke0RPQ0tFUl9BUlRJRkFDVE9SWV9QQVNTV09SRH0gZG9ja2VyLmRpZ2l0YWwuaG9tZW9mZmljZS5nb3YudWsKICAgICAgLSBkb2NrZXIgdGFnIG5vZGUtaGVsbG8td29ybGQgZG9ja2VyLmRpZ2l0YWwuaG9tZW9mZmljZS5nb3YudWsvdWtob21lb2ZmaWNlZGlnaXRhbC9ub2RlLWhlbGxvLXdvcmxkOiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgICAgLSBkb2NrZXIgcHVzaCBkb2NrZXIuZGlnaXRhbC5ob21lb2ZmaWNlLmdvdi51ay91a2hvbWVvZmZpY2VkaWdpdGFsL25vZGUtaGVsbG8td29ybGQ6JHtEUk9ORV9DT01NSVRfU0hBfQogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgZXZlbnQ6IHB1c2gKCiAgcHItYnVpbGRlcjoKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBidWlsZCAtdCBub2RlLWhlbGxvLXdvcmxkIC4KICAgIHdoZW46CiAgICAgIGV2ZW50OiBwdWxsX3JlcXVlc3QKCiAgZGVwbG95LXRvLXByb2Q6CiAgICBpbWFnZTogYnVzeWJveAogICAgY29tbWFuZHM6CiAgICAgIC0gL2Jpbi9lY2hvIGhlbGxvIHByb2QKICAgIHdoZW46CiAgICAgIGVudmlyb25tZW50OiBwcm9kdWN0aW9uCiAgICAgIGV2ZW50OiBkZXBsb3ltZW50CgogIGRlcGxveToKICAgIGltYWdlOiBidXN5Ym94CiAgICBjb21tYW5kczoKICAgICAgLSAvYmluL2VjaG8gaGVsbG8gJHtFTlZfTkFNRX0KICAgIHdoZW46CiAgICAgIGVudmlyb25tZW50OiB1YXQKICAgICAgZXZlbnQ6IGRlcGxveW1lbnQKCiAgZmlyc3Qtc3RlcDoKICAgIGltYWdlOiBidXN5Ym94CiAgICBjb21tYW5kczoKICAgICAgLSBlY2hvIGhlbGxvID4gdGVzdC50eHQKICAgIHdoZW46CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIGV2ZW50OiBwdXNoCgogIHNlY29uZC1zdGVwOgogICAgaW1hZ2U6IGJ1c3lib3gKICAgIGNvbW1hbmRzOgogICAgICAtIGNhdCB0ZXN0LnR4dAogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgZXZlbnQ6IHB1c2gKCiAgdHJpZ2dlcl9kZXBsb3k6CiAgICBpbWFnZTogcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2Ryb25lLXRyaWdnZXI6bGF0ZXN0CiAgICBkcm9uZV9zZXJ2ZXI6IGh0dHBzOi8vZHJvbmUuZGlnaXRhbC5ob21lb2ZmaWNlLmdvdi51awogICAgcmVwbzogVUtIb21lT2ZmaWNlL2t1YmUtbm9kZS1oZWxsby13b3JsZAogICAgYnJhbmNoOiBtYXN0ZXIKICAgIGRlcGxveV90bzogZGV2LWluZHVjdGlvbgogICAgcGFyYW1zOiBIRUxMT19XT1JMRF9OT0RFX0lNQUdFX1RBRz0ke0RST05FX0NPTU1JVF9TSEF9CiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgogICAgICBldmVudDogcHVzaAoKc2VydmljZXM6CiAgZGluZDoKICAgIGltYWdlOiBkb2NrZXI6MS4xMS1kaW5kCiAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICBjb21tYW5kOgogICAgICAtICItcyIKICAgICAgLSAib3ZlcmxheSIKCg.j9edQleqDulPHAhojeo7T4Bds03t6GkGwc49mv8JfLo